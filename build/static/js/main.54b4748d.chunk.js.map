{"version":3,"sources":["pages/Register.jsx","redux/user/types.js","redux/user/actions.js","pages/Login.jsx","components/UserHeader.jsx","components/PostItem.jsx","components/PostForm.jsx","components/LogOutButton.jsx","pages/HomePage.jsx","App.js","redux/user/reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["Register","state","username","email","password","github","componentDidMount","console","log","handleRegister","a","axios","post","res","status","window","location","alert","id","className","type","placeholder","value","this","onChange","e","setState","target","onClick","Component","SET_CURRENT_USER","setCurrentUser","authorId","payload","Login","handelLogin","props","data","authorID","connect","user","dispatch","UserHeader","currentUser","displayName","Avatar","slice","PostItem","renderPostContent","contentType","content","src","alt","deletepostClick","login_author_id","post_author_id","author_id","post_id","tmp_post_id","split","resId","length","delete","handlePostView","style","border","title","author","description","Date","published","Button","color","backgroundColor","PostForm","onImageChange","event","files","img","imagePreview","URL","createObjectURL","getBase64","file","reader","FileReader","readAsDataURL","Promise","resolve","onload","result","showOpenFileDlg","chooseFile","current","click","handleShow","show","visibility","unlisted","sendPost","postID","get","privateToAuthor","post_data","tmp_author_id","rcver_id","authors","items","handlePost","category","base64String","message","bind","React","createRef","variant","TextField","width","label","multiline","rows","ref","display","accept","checked","margin","marginTop","LogOutButton","handleLogout","justifyContent","height","HomePage","publicPosts","posts","filter","showInbox","clearInbox","renderHeader","map","p","i","App","exact","path","component","INIT_STATE","persistConfig","key","storage","whitelist","persistReducer","action","combineReducers","userReducer","middlewares","logger","store","createStore","rootReducer","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54b4748d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport \"../styles/Register.css\";\n\nclass Register extends Component {\n    state ={\n        username:'',\n        email:'',\n        password:'',\n        github:''\n    }\n    \n    componentDidMount = () => {\n        console.log();\n    }\n\n    handleRegister = async () => {\n        const {email, username, github, password} = this.state;\n        try {\n            const res = await axios.post(\"/api/register/\", { email, username, github, password });\n            console.log(res)\n\n            if (res.status === 201) {\n                // this.props.setCurrentUser(res.data);\n                window.location = '/login'\n            }\n\n        } catch (e) {\n            console.log('error', e);\n            alert(\"Invalid Inputs!\")\n        }\n        \n    }\n\n    render() {\n        return (\n            <div id=\"register-page\">\n                <h1>CMPUT404 Social Distribution</h1>\n                <i className=\"fas fa-id-card fa-1x\"></i>\n                <input type=\"text\" id=\"username\" placeholder='your username' value={this.state.username} onChange={(e)=> this.setState({username:e.target.value})} />\n                <i className=\"fas fa-envelope-open-text\"></i>\n                <input type=\"email\" id=\"email\" placeholder='your email' value={this.state.email} onChange={(e)=> this.setState({email:e.target.value})} />\n                <i className=\"fas fa-key\"></i>\n                <input type=\"password\" id=\"pwd\" placeholder='your passowrd' value={this.state.password} onChange={(e)=> this.setState({password:e.target.value})} />\n                <i className=\"fab fa-github\"></i>\n                <input type=\"text\" id=\"github\" placeholder='your github' value={this.state.github} onChange={(e)=> this.setState({github:e.target.value})} />\n                <button id=\"register-btn\" onClick={this.handleRegister}>submit</button>\n            </div>\n        )\n    }\n}\n\nexport default (Register);\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import {SET_CURRENT_USER} from \"./types\";\n\nexport const setCurrentUser = (authorId) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: authorId\n    };\n};","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {setCurrentUser} from \"../redux/user/actions\"\nimport \"../styles/Login.css\";\n\n\nclass Login extends Component {\n\n    state ={\n        email:'',\n        password:''\n    }\n\n    handelLogin = async () => {\n        const {email, password} = this.state;\n        try {\n            const res = await axios.post(\"/api/login/\", { email, password });\n            console.log(res);\n            // with mapDispatchToProps, I can write to redux\n            this.props.setCurrentUser(res.data.authorID);\n            // with mapStateToProps, I can pull from redux\n            console.log('redux store:',this.props.authorID);\n            //redirect to homepage\n            window.location = '/home';\n\n            \n        } catch (e) {\n            console.log(e);\n            alert(\"invalid data!\")\n        }\n    }\n\n    componentDidMount = () => {\n        console.log('props in Login:',this.props);\n    }\n\n    render() {\n        return (\n            <div id=\"login-page\">\n                <h1>CMPUT404 Social Distribution</h1>\n                <i className=\"fas fa-envelope-open-text\"></i>\n                <input type=\"email\" id=\"login-email\" placeholder='your email' value={this.state.email} onChange={(e)=> this.setState({email:e.target.value})} />\n                <i className=\"fas fa-key\"></i>\n                <input type=\"password\" id=\"login-pwd\" placeholder='your passowrd' value={this.state.password} onChange={(e)=> this.setState({password:e.target.value})} />\n                <button id=\"login-btn\" onClick={this.handelLogin}>Login</button>\n            </div>\n        )\n    }\n}\n\n// Read From Redux\nconst mapStateToProps = (state) => ({\n    authorID: state.user.authorID\n})\n\n// write to redux\nconst mapDispatchToProps = (dispatch) => ({\n    setCurrentUser: user => {\n        dispatch(setCurrentUser(user))\n    }\n})\n\n// export the login page with redux feature (state feature)\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\nimport '../styles/Headers.css';\nimport Avatar from '@material-ui/core/Avatar';\n\n\nconst UserHeader = (props) => {\n  // console.log(props);\n  return (\n    <div id=\"user-header\">\n      <h1>Welcome To Social Distribution,  {props.currentUser.displayName} </h1>\n      <hr/>\n      <hr/>\n      <hr/>\n      <div>\n        <Avatar id=\"user-avatar\">{props.currentUser.displayName.slice(0, 1)}</Avatar>\n        <div id=\"user-info\">\n          <h2>Email: {props.currentUser.email}</h2>\n          <h2>Github: {props.currentUser.github}</h2>\n        </div>\n\n      </div>\n    </div>\n  );\n}\nexport default UserHeader;","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Button } from \"@material-ui/core\"\nimport ReactMarkDown from \"react-markdown\";\nimport '../styles/PostItem.css'\n\n// This component is used to display the Post\nclass PostItem extends Component {\n\n  renderPostContent = () => {\n    \n    const { contentType } = this.props.post;\n    console.log(contentType)\n    // console.log(\"I am Here\")\n    switch (contentType) {\n    case \"text/plain\":\n      return <p>{this.props.post.content}</p>;\n    case \"text/markdown\":\n      return <ReactMarkDown>{this.props.post.content}</ReactMarkDown>;\n    case \"image/png;base64\":\n    case \"image/jpeg;base64\":\n      return <div><img className=\"imagePreview\" src={this.props.post.content} alt=\"Unavailable\" /></div>\n    default:\n      return <p>{this.props.post.content}</p>;\n    }\n  }\n\n\n  deletepostClick = async () => {\n    let login_author_id = this.props.authorID\n    let post_author_id = this.props.post.author_id\n    let post_id = this.props.post.id\n    let tmp_post_id = post_id.split(\"/\");\n\n    let resId = tmp_post_id[tmp_post_id.length - 1];\n    if (login_author_id !== post_author_id) {\n      window.alert(\"you cannot delete this post\")\n    } else {\n      try {\n        const res = await axios.delete(`api/author/${post_author_id}/posts/${resId}/`);\n        if (res.status === 200) {\n            // re-pull all posts from backend\n            this.props.handlePostView();\n        }\n      } catch (err) {\n        // console.log(err.response.status)\n      }\n    }\n  }\n\n  render() {\n\n    return (\n      <div style={{ border: \"solid 1px grey\" }}>\n        <h1>{this.props.post.title}</h1>\n        <h4>{this.props.post.author.displayName}</h4>\n        <h4>description: {this.props.post.description}</h4>\n        <p id=\"post-text\">{this.renderPostContent()}</p>\n        <h4>published at {Date(this.props.post.published)}</h4>\n        <Button style={{color:\"black\", backgroundColor:\"grey\"}} \n        onClick={this.deletepostClick}>Delete</Button>\n        <br/>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  authorID: state.user.authorID\n})\n\nexport default connect(mapStateToProps)(PostItem);","import React, { Component } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport \"../styles/PostForm.css\";\nimport axios from \"axios\";\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      title: \"\",\n      description: \"\",\n      contentType: \"text/plain\",\n      category: \"WEB TUTORIAL\",\n      content: \"\",\n      visibility: \"PUBLIC\",\n      unlisted: false,\n      imagePreview: null,\n      img: null,\n      privateToAuthor: \"\"\n    };\n    this.onImageChange = this.onImageChange.bind(this);\n    this.chooseFile = React.createRef();\n  }\n\n\n  componentDidMount = () => { \n      // console.log( \"props: \", this.props)\n  }\n\n  onImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      this.setState({ img: event.target.files[0] }, () => {\n        this.setState({ imagePreview: URL.createObjectURL(this.state.img) });\n      })\n    }\n  };\n\n  getBase64 = (file) => {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    return new Promise(resolve => {\n      reader.onload = e => {\n        resolve(e.target.result);\n      }\n    })\n  };\n\n  showOpenFileDlg = () => {\n    this.chooseFile.current.click()\n  };\n\n  handleShow = () => {\n    const { show } = this.state;\n    this.setState({ show: !show, visibility: \"PUBLIC\",description: \"\",title:\"\",content: \"\", unlisted: false, imagePreview:null, img:null});\n  }\n\n  sendPost = async (authorID, postID, visibility) => {\n    \n    // send to another author\n    if (visibility === \"PRIVATE\") {\n        let res = await axios.get(`api/author/${this.state.privateToAuthor}/`);\n        // console.log(res.data)  \n        let post_data = { \"type\": \"post\", \"post_id\": postID };\n        let tmp_author_id = res.data.id.split(\"/\");\n        let rcver_id = tmp_author_id[tmp_author_id.length - 1];\n        axios.post(`api/author/${rcver_id}/inbox/`, post_data);\n    }\n    else {\n        // send to the public\n        if (visibility === \"PUBLIC\") {\n          const res = await axios.get(`api/author/`);\n        \n        } else if (visibility === \"FRIEND\") {\n          // send to friends\n            var res = await axios.get(`api/author/${authorID}/friends/`);\n            var authors = res.data.items;\n        \n            for (let author of authors) {\n                console.log(author)\n                let data = { \"type\": \"post\", \"post_id\": postID };\n                console.log(data)\n                let tmp_author_id = author.id.split(\"/\");\n                let rcver_id = tmp_author_id[tmp_author_id.length - 1];\n                console.log(rcver_id)\n                if (rcver_id !== this.props.authorID)\n                    axios.post(`api/author/${rcver_id}/inbox/`, data);\n            }\n        }\n    }\n  }\n\n  handlePost = async () => {\n    const { title, description, category, visibility, unlisted } = this.state;\n    const { authorID } = this.props;\n\n    if (this.state.contentType === \"image\") {\n      // convert image to base 64\n      var base64String = await this.getBase64(this.state.img);\n      var contentType = base64String.slice(5).split(\",\")[0];\n      var content = base64String;\n    } else if (this.state.contentType === \"text/plain\" || this.state.contentType === \"text/markdown\") {\n      contentType = this.state.contentType;\n      console.log(contentType)\n      content = this.state.content;\n    }\n\n    if (title && description && content) {\n      try {\n        // console.log(authorID)\n        // console.log( title, source, origin, description, contentType, category, content, visibility, unlisted );\n        var res = await axios.post(`api/author/${authorID}/posts/`, \n        { title, description, content, category, visibility, unlisted, contentType});\n\n        this.props.handlePostView()\n        // reset post form \n        this.setState({ show: false, visibility: \"PUBLIC\",description: \"\",title:\"\",content: \"\", unlisted: false, contentType: \"text/plain\",});\n        let tmp_post_id = res.data.id.split(\"/\");\n        let resId = tmp_post_id[tmp_post_id.length - 1];\n        // console.log(\"postID:\", resId);\n        if (!unlisted) { // unlisted === false\n          this.sendPost(authorID, resId, visibility);\n        }\n        else {\n          alert(\"this is the unlisted POST ID: \" + resId);\n        }\n\n      } catch (err) {\n        console.log(err.message);\n      }\n    } else {\n      alert(\"Invalid Post Form !!!\");\n    }\n  }\n\n  render() {\n    const { show, title, description, content, contentType, unlisted, privateToAuthor } = this.state;\n\n    return (\n      <div>\n        {\n          this.props.authorID !== null ?\n            <div id=\"form-control\">\n              <Button\n                variant=\"outlined\" color=\"primary\" onClick={this.handleShow}> {show ? \"Cancel\" : \"Create Post\"}\n              </Button>\n              {\n                show ?\n                  <div id=\"post-form\">\n                    <TextField\n                      style={{ width: 300 }} label=\"Title\" value={title}\n                      onChange={(e) => this.setState({ title: e.target.value })}\n                    /><br />\n                    <TextField\n                      style={{ width: 300 }} label=\"Description\" value={description}\n                      onChange={(e) => this.setState({ description: e.target.value })}/>\n                      <br />\n                    {\n                      contentType === \"text/plain\" || contentType === \"text/markdown\" ?\n                        <div>\n                          <TextField\n                            style={{ width: 350 }} label=\"Content\" multiline rows={10} value={content}\n                            onChange={(e) => this.setState({ content: e.target.value })}/>\n                            <br />\n                        </div>\n                        :\n                        <div>\n                          <Button variant=\"outlined\" color=\"primary\" onClick={this.showOpenFileDlg}>Choose Image</Button>\n                          <br />\n                          <input type=\"file\" ref={this.chooseFile} onChange={this.onImageChange} style={{ display: 'none' }} accept=\"image/png, image/jpeg\" />\n                          <div><img className=\"imagePreview\" src={this.state.imagePreview} alt=\"Unavailable\" /></div>\n                        </div>\n                    }\n\n                    <label>Content Type:</label>\n                    <select onChange={(e) => { this.setState({ contentType: e.target.value }) }}>\n                      <option value=\"text/plain\">plaintext</option>\n                      <option value=\"text/markdown\">markdown</option>\n                      <option value=\"image\">image</option>\n                    </select>\n\n                    <label>Visibility:</label>\n                    <select onChange={(e) => { this.setState({ visibility: e.target.value }) }}>\n                      <option value=\"PUBLIC\">PUBLIC</option>\n                      <option value=\"FRIEND\">FRIEND</option>\n                      <option value=\"PRIVATE\">PRIVATE</option>\n                    </select>\n                    <p>{this.state.visibility}</p>\n                    <label>Unlisted:</label>\n                    <input type=\"checkbox\" checked={unlisted} onChange={(e) => this.setState({ unlisted: e.target.checked })} />\n                    {\n                      this.state.visibility === \"PRIVATE\" ?\n                        <TextField\n                          style={{ margin: 10 }} value={privateToAuthor} onChange={(e) => this.setState({ privateToAuthor: e.target.value })} placeholder=\"private to\" variant=\"filled\"/>\n                        :\n                        null\n                    }\n                    <Button style={{ marginTop: 15 }} variant=\"outlined\" color=\"primary\" onClick={this.handlePost}>\n                      Post\n                    </Button>\n                  </div>\n                  :\n                  null\n              }\n            </div>\n            :\n            <p>You are not logged in</p>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  authorID: state.user.authorID\n})\n\nexport default connect(mapStateToProps)(PostForm);\n\n","import { Button } from '@material-ui/core'\nimport React, { Component } from 'react'\n\nimport {connect} from \"react-redux\";\nimport {setCurrentUser} from \"../redux/user/actions\"\n\n\nclass LogOutButton extends Component {\n\n    handleLogout = () => {\n        this.props.setCurrentUser(null);\n        window.location = '/login';\n    }\n\n    render() {\n        return (\n            <div style={{ display:'flex', justifyContent:'flex-end', height:20}}>\n                <Button onClick={this.handleLogout}>Log out</Button>\n            </div>\n        )\n    }\n}\n\n\n// write to redux, set current user to null\nconst mapDispatchToProps = (dispatch) => ({\n    setCurrentUser: user => {\n        dispatch(setCurrentUser(user))\n    }\n})\n\nexport default connect(null, mapDispatchToProps)(LogOutButton);","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport UserHeader from '../components/UserHeader';\nimport PostItem from '../components/PostItem';\nimport PostForm from '../components/PostForm';\nimport LogOutButton from '../components/LogOutButton';\n\nclass HomePage extends Component {\n    state = {\n        currentUser: null,\n        publicPosts: []\n    }\n\n    componentDidMount = async () => {\n        console.log(this.props.authorID);\n        // retrieve authorID form redux\n        const res = await axios.get(`/api/author/${this.props.authorID}/`);\n\n        await this.handlePostView();\n        this.setState({currentUser: res.data});\n    }\n\n    handlePostView = async () => {\n        if (this.props.authorID !== null) {\n            try {\n            const res = await axios.get(\"/api/posts/\");\n            console.log(res.data.posts);\n            this.setState({publicPosts: res.data.posts.filter((post)=>{\n                // only show the public posts\n                return post.visibility === \"PUBLIC\" && post.unlisted  === false;\n            })});\n            } catch (e) {\n                console.log(e);\n            }   \n        } else {\n            alert('Not Logged In!');\n        }   \n    }\n\n    // get the inbox content\n    showInbox = async () => {\n        if (this.props.authorID !== null) {\n            try {\n            const res = await axios.get(`/api/author/${this.props.authorID}/inbox/`);\n            } catch (e) {\n                console.log(e);\n            }\n        } else {\n            alert('Not Logged In!');\n        }\n    }\n\n    // clear the inbox content\n    clearInbox = async () => {\n        if (this.props.authorID !== null) {\n            try {\n                const res = await axios.delete(`/api/author/${this.props.authorID}/inbox/`);\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            alert('Not Logged In!');\n        }\n    }\n\n    renderHeader =  () => {\n        const {currentUser} = this.state;\n        switch (currentUser) {\n            case null:\n                return \"\";\n            default:\n                return <UserHeader currentUser={currentUser} />\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <LogOutButton />\n                <div>\n                    {this.renderHeader()}\n                </div>\n                <div>\n                    {\n                    this.state.publicPosts.length !== 0 ?\n                        this.state.publicPosts.map((p, i) => \n                            <PostItem post={p} key={i} handlePostView={this.handlePostView} />\n                        )\n                        : <h1 style={{display:\"flex\", justifyContent:\"center\"}}>No Posts</h1>\n                    }\n                </div>\n                <div>\n                    <PostForm handlePostView={this.handlePostView}/>\n                </div>\n            </>\n        )\n    }\n}\n\n// write to redux\nconst mapStateToProps = (state) => ({\n    authorID: state.user.authorID\n})\nexport default connect(mapStateToProps)(HomePage);\n","import React, {Component} from 'react';\nimport {Route,BrowserRouter,Switch} from 'react-router-dom';\n\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport HomePage from './pages/HomePage';\n\nclass App extends Component {\n  render () {\n      return (\n      <BrowserRouter>\n      \n        <Switch>\n          <Route exact path=\"/\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/home\" component={HomePage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { SET_CURRENT_USER } from \"./types\";\nimport {persistReducer} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst INIT_STATE = {\n  authorID: null\n}\n\n// keep the page data after refresh\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"authorID\"]\n}\n\nconst userReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        authorID: action.payload\n      };\n    default:\n      return state\n  }\n}\n\nexport default persistReducer(persistConfig, userReducer);","import {combineReducers} from \"redux\";\nimport userReducer from './user/reducer';\n\nexport default combineReducers({\n    user: userReducer\n});\n","import { createStore, applyMiddleware } from \"redux\"\nimport rootReducer from \"./root-reducer\";\nimport logger from \"redux-logger\";\n\nconst middlewares = [logger];\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(...middlewares),\n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}